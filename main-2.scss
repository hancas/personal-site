%clearfix {
	&:after, &:before {
		content: "";
		display: table;
	}

	&:after {
		clear: both;
	}
}

$randomAngle: random(4) * 45;

@mixin random-color($selector) {
	#{$selector}: linear-gradient(#{$randomAngle}deg, unquote("rgba(#{random(256) - 1}, #{random(256) - 1}, #{random(256) - 1}, 1)"), unquote("rgba(#{random(256) - 1}, #{random(256) - 1}, #{random(256) - 1}, 1)"));
  	// #{$selector}: unquote("rgba(#{random(256) - 1}, #{random(256) - 1}, #{random(256) - 1}, 1)");
}

*, *:after, *:before {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

body {
	position: relative;
	font-size: 16px;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	min-width: 320px;
	background: #fff;
}

.box {
	position: absolute;
	left: 0;
	width: 100vw;
	height: 100vh;
	-webkit-transform: translate3d(0, 0, 0);
	-moz-transform: translate3d(0, 0, 0);
	-ms-transform: translate3d(0, 0, 0);
	-o-transform: translate3d(0, 0, 0);
	transform: translate3d(0, 0, 0);
	-webkit-transition: all 1s cubic-bezier(0.745, -0.015, 0.22, 0.995);
	-moz-transition: all 1s cubic-bezier(0.745, -0.015, 0.22, 0.995);
	transition: all 1s cubic-bezier(0.745, -0.015, 0.22, 0.995);
	transition-delay: 0.8s;

	ul {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		text-align: center;
		width: 80vw;
	}

	li {
		display: inline-block;
		vertical-align: middle;
		list-style: none;
		width: 10vw;
		height: 10vw;
		margin: 0 20px;
		background: #fff;
		text-align: center;
		text-transform: uppercase;
		font-size: 2em;
		-webkit-transition: all 0.8s cubic-bezier(0.63, 0.07, 0.26, 0.93);
		-moz-transition: all 0.8s cubic-bezier(0.63, 0.07, 0.26, 0.93);
		transition: all 0.8s cubic-bezier(0.63, 0.07, 0.26, 0.93);
	}

	&.current {
		li {
			opacity: 1;
			transform: translateY(0);
		}

      @for $i from 1 through 4 {
			li:nth-child(#{$i}) {
				transition-delay: #{1.6 + (0.1 * $i)}s
			}
		}
	}

	&.under {
		li {
			opacity: 0;
			transform: translateY(200px);
		}

      @for $i from 1 through 4 {
			li:nth-child(#{$i}) {
				transition-delay: #{(0.1 * $i)}s
			}
		}
	}

	&.above {
		li {
			opacity: 0;
			transform: translateY(-200px);
		}

      @for $i from 1 through 4 {
			li:nth-child(#{$i}) {
				transition-delay: #{(0.1 * $i)}s
			}
		}
	}

}

@for $i from 1 through 5 {
	.box_#{$i} {
		@include random-color('background');
		z-index: #{$i};
		// top: #{($i - 1) * 100}vh;
      transform: translateY(#{($i - 1) * 100}vh)
	}
}
